@page "/"
@using Reader.Domain.Interfaces
@using MudBlazor
@using Reader.Domain.Enums
@using Reader.Domain.Models
@inject IReaderBookState ReaderBookState;
@inject IBookReaderService BookReaderService;
@inject ITranslateService TranslateService;
@inject IScrollInfoService ScrollInfoService

<h1>@_sectionName</h1>

    @if (ReaderBookState.BookSectionContent.Value != null)
    {
        @foreach (var ff in ReaderBookState.BookSectionContent.Value!)
        {
            if (string.IsNullOrWhiteSpace(ff.Sentence))
            {
                continue;
            }

            <MudText Typo="Typo.body1">@ff.Sentence</MudText>

            <MudIconButton Icon="@Icons.Material.Filled.Translate"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           Size="Size.Small"
                           OnClick="async() => await TranslateBookSentence(ff)"/>
                                                   
            if (!string.IsNullOrWhiteSpace(ff.TranslatedSentence))
            {
                <MudText Typo="Typo.body1" Color="Color.Error">@ff.TranslatedSentence</MudText>
            }
        }
    }

@code {
    string _sectionName= "";

    protected override async Task OnInitializedAsync()
    {
        await BookReaderService.LoadBookAsync("thebladeitself.fb2");

        _sectionName = ReaderBookState.BookSectionName.Value!;

        ReaderBookState.BookSectionName.OnChange += () =>
        {
            InvokeAsync(() =>
            {
                _sectionName = ReaderBookState.BookSectionName.Value!;
                StateHasChanged();
            });
        };

        ScrollInfoService.OnScrollEnd += OnScrollEnd;
        
        StateHasChanged();
    }

    private void OnScrollEnd(object sender, float percent)
    {
        //ReaderBookState.BookSectionName.Value = $"{percent}%";
        StateHasChanged();
    }
    
    public async Task TranslateBookSentence(BookSentence bookSentence)
    {
        bookSentence.TranslatedSentence = await TranslateService.Translate(bookSentence.Sentence, Language.Ukrainian);
    }
    
    public void Dispose()
    {
        ScrollInfoService.OnScrollEnd -= OnScrollEnd;
    }
}
